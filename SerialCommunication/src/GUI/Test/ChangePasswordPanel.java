/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Test;

import GUI.*;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Qess
 */
public class ChangePasswordPanel extends javax.swing.JPanel {
    
    private GUIFrame frame;
    private int errors;
    /**
     * Creates new form LoginControllerPanel
     */
    public ChangePasswordPanel() {
        initComponents();
        errors = 3;
    }

    public void setFrame(GUI.Test.GUIFrame frame) {
        this.frame = frame;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labSignUp = new javax.swing.JLabel();
        labInformation = new javax.swing.JLabel();
        labCurrentPass = new javax.swing.JLabel();
        textCurrentPass = new javax.swing.JTextField();
        textConfirmPass = new javax.swing.JTextField();
        labConfirmPass = new javax.swing.JLabel();
        textNewPass = new javax.swing.JTextField();
        labNewPass = new javax.swing.JLabel();
        btnChangePass = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        labErrorWrongPass = new javax.swing.JLabel();
        labErrorMatch = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labSignUp.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labSignUp.setText("Change Password");
        add(labSignUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 200, -1));

        labInformation.setText("Here you can change your password.");
        add(labInformation, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 210, -1));

        labCurrentPass.setText("Current password");
        add(labCurrentPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        textCurrentPass.setNextFocusableComponent(textNewPass);
        add(textCurrentPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 187, -1));

        add(textConfirmPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 187, -1));

        labConfirmPass.setText("Confirm new password");
        add(labConfirmPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        textNewPass.setNextFocusableComponent(textConfirmPass);
        add(textNewPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 187, -1));

        labNewPass.setText("New password (4 - 30 characters)");
        add(labNewPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        btnChangePass.setText("Change password");
        btnChangePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePassActionPerformed(evt);
            }
        });
        add(btnChangePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, -1, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, 60, -1));

        labErrorWrongPass.setForeground(new java.awt.Color(255, 0, 0));
        labErrorWrongPass.setText("- wrong password");
        add(labErrorWrongPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 120, -1));
        labErrorWrongPass.setVisible(false);

        labErrorMatch.setForeground(new java.awt.Color(255, 0, 0));
        labErrorMatch.setText("Passwords do not match. Please try again.");
        add(labErrorMatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 240, -1));
        labErrorMatch.setVisible(false);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        int reply = JOptionPane.showConfirmDialog(null,"Are you sure you want to go back?\n"
                                         + "All changes will be discarded.", 
                                         "choose one", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
          frame.changePanel("card2");
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnChangePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePassActionPerformed
        inputCheck();
        if (errors ==0){
            JOptionPane.showMessageDialog(null, "Your password has been changed.", "Password change successfull", JOptionPane.INFORMATION_MESSAGE);
            String[] newValues = new String[1];
            newValues[0] = textNewPass.getText();
            frame.cManager.updateCustomerInformation(frame.cManager.getLoggedInUser().getCustomerNumb(), 4, newValues);
            frame.changePanel("card2");
            resetFields();
        }
        errors = 3;
    }//GEN-LAST:event_btnChangePassActionPerformed
    
    private void inputCheck() {
        if(textCurrentPass.getText().equals(frame.cManager.getLoggedInUser().getPassword())){
            labCurrentPass.setForeground(Color.BLACK);
            labErrorWrongPass.setVisible(false);
            errors--;
        } else{
            labCurrentPass.setForeground(Color.RED);
            labErrorWrongPass.setVisible(true);
        }
        
        if(!textNewPass.getText().equals("") && textNewPass.getText().length() >= 4 && textNewPass.getText().length() <= 30) {
            labNewPass.setForeground(Color.BLACK);
            errors--;
        } else{
            labNewPass.setForeground(Color.RED);
        }
        
        if((!textConfirmPass.getText().equals("")) && textConfirmPass.getText().equals(textNewPass.getText())) {
            labConfirmPass.setForeground(Color.BLACK);
            labErrorMatch.setVisible(false);
            errors--;
        } else{
            labConfirmPass.setForeground(Color.RED);
            labErrorMatch.setVisible(true);
        }
    }
    
    // Metod found at StackOverflow.com, which validates the syntax of an emailadress
    // http://stackoverflow.com/questions/624581/what-is-the-best-java-email-address-validation-method
    private boolean isValidEmailAddress(String email) {
       java.util.regex.Pattern p = java.util.regex.Pattern.compile(".+@.+\\.[a-z]+");
       java.util.regex.Matcher m = p.matcher(email);
       return m.matches();
    }
    
    private void resetFields(){
        textCurrentPass.setText("");
        textNewPass.setText("");
        textConfirmPass.setText("");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnChangePass;
    private javax.swing.JLabel labConfirmPass;
    private javax.swing.JLabel labCurrentPass;
    private javax.swing.JLabel labErrorMatch;
    private javax.swing.JLabel labErrorWrongPass;
    private javax.swing.JLabel labInformation;
    private javax.swing.JLabel labNewPass;
    private javax.swing.JLabel labSignUp;
    private javax.swing.JTextField textConfirmPass;
    private javax.swing.JTextField textCurrentPass;
    private javax.swing.JTextField textNewPass;
    // End of variables declaration//GEN-END:variables
}
